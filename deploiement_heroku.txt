Comme je l'avais écrit précédemment, je n'avais pas utilisé Streamlit donc je ne peux pas dire comment articuler le fichier .py pour faire fonctionner les 2 ensembles. Mais pour le déploiement, il faut ajouter un fichier setup.sh en plus:

mkdir -p ~/.streamlit/

echo "\
[general]\n\
email = \"email@domain\"\n\
" > ~/.streamlit/credentials.toml

echo "\
[server]\n\
headless = true\n\
enableCORS=false\n\
port = $PORT\n\
" > ~/.streamlit/config.toml


le fichier requirements.txt (à adapter suivant le besoin):
numpy==1.21.1
pandas==1.3.1
streamlit==0.74.1
matplotlib

# Flask Framework
Flask==1.0.2

# Flask Packages
Flask-Login==0.4.0
Flask-Migrate==2.0.2
Flask-Script==2.0.5
Flask-SQLAlchemy==2.4.0
Flask-WTF==0.14.2
Flask-User==1.0.1.5

le Procfile:
web: sh setup.sh && streamlit run first_streamlit.py


et le fichier first_streamlit.py
#!/usr/bin/python
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import streamlit as st

from flask import Flask, request

app = Flask(__name__)

[le code pour streamlit]

@app.route('/')
def bonjour():

    message = "Hello World!\n"
    return message

if __name__ == "__main__":
    app.run()


Le tout dans le même répertoire. Je transfert de local vers heroku avec Git sans passer par GitHub

$ heroku login
$ git init
$ heroku git:remote -a "<Nom de l'appli>"
$ git add .
$ git commit -am "Commit Message"
$ git branch
$ git push heroku main (ou master)
$ heroku open